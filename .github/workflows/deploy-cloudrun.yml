name: Deploy to Cloud Run (api-server)

on:
  push:
    branches: [ "api-server" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure gcloud
        run: |
          gcloud config set project "${{ vars.GCP_PROJECT_ID }}"
          gcloud config set run/region "${{ vars.GCP_REGION }}"
          gcloud auth list
          gcloud config list

      - name: Enable APIs (with error handling)
        run: |
          echo "Enabling required APIs..."
          gcloud services enable run.googleapis.com || echo "Run API already enabled or permission issue"
          gcloud services enable artifactregistry.googleapis.com || echo "Artifact Registry API already enabled or permission issue"  
          gcloud services enable cloudbuild.googleapis.com || echo "Cloud Build API already enabled or permission issue"

      - name: Create Artifact Registry (if not exists)
        run: |
          echo "Creating Artifact Registry repository..."
          gcloud artifacts repositories create containers \
            --repository-format=docker \
            --location="${{ vars.GCP_REGION }}" \
            --description="MyMovies API container images" || echo "Repository already exists"

      - name: Generate version info
        run: |
          echo "Generating version info..."
          node generate-version.js > version-info.json
          cat version-info.json

      - name: Build and push image
        run: |
          IMAGE_REF="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/containers/mymovies-api:${{ github.sha }}"
          echo "Building ${IMAGE_REF}"
          gcloud builds submit --region "${{ vars.GCP_REGION }}" --tag "${IMAGE_REF}" .

      - name: Deploy to Cloud Run
        run: |
          IMAGE_REF="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/containers/mymovies-api:${{ github.sha }}"
          echo "Deploying ${IMAGE_REF}"
          gcloud run deploy mymovies-api \
            --image "${IMAGE_REF}" \
            --platform managed \
            --region "${{ vars.GCP_REGION }}" \
            --allow-unauthenticated \
            --timeout=900 \
            --concurrency=1 \
            --cpu=2 \
            --memory=2Gi \
            --min-instances=1 \
            --max-instances=10 \
            --cpu-throttling \
            --execution-environment=gen2 \
            --set-env-vars="PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true,PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable,CHROME_BIN=/usr/bin/google-chrome-stable,NODE_ENV=production,PUPPETEER_ARGS=--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-accelerated-2d-canvas --no-first-run --no-zygote --single-process --disable-gpu"

      - name: Print service URL
        run: |
          echo "Service deployed successfully!"
          gcloud run services describe mymovies-api --region "${{ vars.GCP_REGION }}" --format='value(status.url)'
